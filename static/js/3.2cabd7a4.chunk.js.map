{"version":3,"sources":["component/Order/CheckoutSummary/CheckoutSummary.js","component/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","component/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","component/UI/Input/Input.module.css","containers/Checkout/Checkout.module.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredient","Button","btnType","clicked","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","ContactData","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updateFormElement","updateObject","target","checkValidity","updateOrderForm","inputIdentifiers","setState","formElementsArray","this","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component","module","exports"],"mappings":"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","file":"static/js/3.2cabd7a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst checkoutSummary = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.CheckoutSummary}>\r\n\t\t\t<h1>We hope it tastes well!</h1>\r\n\t\t\t<div style={{ width: \"100%\", margin: \"auto\" }}>\r\n\t\t\t\t<Burger ingredient={props.ingredient} />\r\n\t\t\t</div>\r\n\t\t\t<Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n\t\t\t\tCANCEL\r\n\t\t\t</Button>\r\n\t\t\t<Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n\t\t\t\tCONTINUE\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase \"input\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"textarea\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"select\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.elementConfig.options.map((option) => (\r\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Input}>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../../component/UI/Button/Button\";\r\nimport Spinner from \"../../../component/UI/Spinner/Spinner\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../component/UI/Input/Input\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\r\nclass ContactData extends Component {\r\n\tstate = {\r\n\t\torderForm: {\r\n\t\t\tname: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tplaceholder: \"Your Name\",\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tstreet: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tplaceholder: \"Street\",\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tzipCode: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tplaceholder: \"Zip Code\",\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 5,\r\n\t\t\t\t\tmaxLength: 5,\r\n\t\t\t\t\tisNumeric: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tcountry: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\tplaceholder: \"Country\",\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\temail: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"email\",\r\n\t\t\t\t\tplaceholder: \"Your E-Mail\",\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tisEmail: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tdeliveryMethod: {\r\n\t\t\t\telementType: \"select\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{ value: \"sicepatwet\", displayValue: \"SicepatWET\" },\r\n\t\t\t\t\t\t{ value: \"j&wet\", displayValue: \"J&WET\" },\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"sicepatwet\",\r\n\t\t\t\tvalidation: {},\r\n\t\t\t\tvalid: true,\r\n\t\t\t},\r\n\t\t},\r\n\t\tformIsValid: false,\r\n\t\t// loading: false, // di comment karena redux\r\n\t};\r\n\r\n\torderHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst formData = {};\r\n\t\tfor (let formElementIdentifier in this.state.orderForm) {\r\n\t\t\tformData[formElementIdentifier] = this.state.orderForm[\r\n\t\t\t\tformElementIdentifier\r\n\t\t\t].value;\r\n\t\t}\r\n\t\t// redux\r\n\t\tconst order = {\r\n\t\t\tingredient: this.props.ings,\r\n\t\t\tprice: this.props.price,\r\n\t\t\torderData: formData,\r\n\t\t\tuserId: this.props.userId,\r\n\t\t};\r\n\t\tthis.props.onOrderBurger(order, this.props.token);\r\n\t\t// ini di comment karena use redux\r\n\t\t// axios\r\n\t\t// \t.post(\"/orders.json\", order)\r\n\t\t// \t.then((response) => {\r\n\t\t// \t\tthis.setState({ loading: false });\r\n\t\t// \t\tthis.props.history.push(\"/\");\r\n\t\t// \t})\r\n\t\t// \t.catch((error) => {\r\n\t\t// \t\tthis.setState({ loading: false });\r\n\t\t// \t});\r\n\t\t// console.log(this.props.ingredient);\r\n\t};\r\n\r\n\t// checkValidity(value, rules) {\r\n\t// \tlet isValid = true;\r\n\t// \tif (!rules) {\r\n\t// \t\treturn true;\r\n\t// \t}\r\n\t// \tif (rules.required) {\r\n\t// \t\tisValid = value.trim() !== \"\" && isValid;\r\n\t// \t}\r\n\t// \tif (rules.minLength) {\r\n\t// \t\tisValid = value.length >= rules.minLength && isValid;\r\n\t// \t}\r\n\t// \tif (rules.maxLength) {\r\n\t// \t\tisValid = value.length <= rules.maxLength && isValid;\r\n\t// \t}\r\n\t// \tif (rules.isEmail) {\r\n\t// \t\tconst pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\t// \t\tisValid = pattern.test(value) && isValid;\r\n\t// \t}\r\n\r\n\t// \tif (rules.isNumeric) {\r\n\t// \t\tconst pattern = /^\\d+$/;\r\n\t// \t\tisValid = pattern.test(value) && isValid;\r\n\t// \t}\r\n\t// \treturn isValid;\r\n\t// }\r\n\tinputChangedHandler = (event, inputIdentifier) => {\r\n\t\t// const updateOrderForm = {\r\n\t\t// \t...this.state.orderForm,\r\n\t\t// };\r\n\r\n\t\t// using utility\r\n\t\tconst updateFormElement = updateObject(\r\n\t\t\tthis.state.orderForm[inputIdentifier],\r\n\t\t\t{\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tvalid: checkValidity(\r\n\t\t\t\t\tevent.target.value,\r\n\t\t\t\t\tthis.state.orderForm[inputIdentifier].validation\r\n\t\t\t\t),\r\n\t\t\t\ttouched: true,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst updateOrderForm = updateObject(this.state.orderForm, {\r\n\t\t\t[inputIdentifier]: updateFormElement,\r\n\t\t});\r\n\r\n\t\t// const updateFormElement = { ...updateOrderForm[inputIdentifier] };\r\n\t\t// updateFormElement.value = event.target.value;\r\n\t\t// updateFormElement.valid = this.checkValidity(\r\n\t\t// \tupdateFormElement.value,\r\n\t\t// \tupdateFormElement.validation\r\n\t\t// );\r\n\t\t// updateFormElement.touched = true;\r\n\t\t// updateOrderForm[inputIdentifier] = updateFormElement;\r\n\r\n\t\tlet formIsValid = true;\r\n\t\tfor (let inputIdentifiers in updateOrderForm) {\r\n\t\t\tformIsValid =\r\n\t\t\t\tupdateOrderForm[inputIdentifiers].valid && formIsValid;\r\n\t\t}\r\n\r\n\t\tthis.setState({ orderForm: updateOrderForm, formIsValid: formIsValid });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst formElementsArray = [];\r\n\t\tfor (let key in this.state.orderForm) {\r\n\t\t\tformElementsArray.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.orderForm[key],\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet form = (\r\n\t\t\t<form onSubmit={this.orderHandler}>\r\n\t\t\t\t{formElementsArray.map((formElement) => (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\t\t\tshouldValidate={formElement.config.validation}\r\n\t\t\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\t\t\tchanged={(event) =>\r\n\t\t\t\t\t\t\tthis.inputChangedHandler(event, formElement.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n\t\t\t\t\tORDER\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t\tif (this.props.loading) {\r\n\t\t\tform = <Spinner />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={classes.ContactData}>\r\n\t\t\t\t<h4>Enter your Contact Data</h4>\r\n\t\t\t\t{form}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredient,\r\n\t\tprice: state.burgerBuilder.totalPrice,\r\n\t\tloading: state.order.loading,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonOrderBurger: (orderData, token) =>\r\n\t\t\tdispatch(actions.purchaseBurger(orderData, token)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSummary from \"../../component/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport classes from \"./Checkout.module.css\";\r\nclass Checkout extends Component {\r\n\t// state = {\r\n\t// \tingredient: null,\r\n\t// \tprice: 0,\r\n\t// };\r\n\r\n\t// componentWillMount() {\r\n\r\n\t//sudah tidak dibutuhkan di redux\r\n\r\n\t// \tconst query = new URLSearchParams(this.props.location.search);\r\n\t// \tconst ingredient = {};\r\n\t// \tlet price = 0;\r\n\t// \tfor (let param of query.entries()) {\r\n\t// \t\t// [\"salad\", '1] isinya\r\n\t// \t\tif (param[0] === \"price\") {\r\n\t// \t\t\tprice = param[1];\r\n\t// \t\t} else {\r\n\t// \t\t\tingredient[param[0]] = +param[1];\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \tthis.setState({ ingredient: ingredient, totalPrice: price });\r\n\t// }\r\n\r\n\tcheckoutCancelledHandler = () => {\r\n\t\tthis.props.history.goBack();\r\n\t};\r\n\r\n\tcheckoutContinuedHandler = () => {\r\n\t\tthis.props.history.replace(\"/checkout/contact-data\");\r\n\t};\r\n\trender() {\r\n\t\tlet summary = <Redirect to=\"/\" />;\r\n\t\tif (this.props.ings) {\r\n\t\t\tconst purchasedRedirect = this.props.purchased ? (\r\n\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t) : null;\r\n\t\t\tsummary = (\r\n\t\t\t\t<div className={classes.Checkout}>\r\n\t\t\t\t\t{purchasedRedirect}\r\n\t\t\t\t\t<CheckoutSummary\r\n\t\t\t\t\t\tingredient={this.props.ings}\r\n\t\t\t\t\t\tcheckoutCancelled={this.checkoutCancelledHandler}\r\n\t\t\t\t\t\tcheckoutContinued={this.checkoutContinuedHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={this.props.match.path + \"/contact-data\"}\r\n\t\t\t\t\t\tcomponent={ContactData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn summary;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredient,\r\n\t\tpurchased: state.order.purchased,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n\r\n// note: use before redux\r\n// // <div className={classes.Checkout}>\r\n\r\n// \t\t\t\t{/* <Route */}\r\n// \t\t\t\t\t{/* path={this.props.match.path + \"/contact-data\"} */}\r\n// \t\t\t\t\t{/* // render={(props) => ( */}\r\n// \t\t\t\t\t{/* // \t<ContactData */}\r\n// \t\t\t\t\t{/* // \t\tingredient={this.state.ingredient}\r\n// \t\t\t\t\t// \t\tprice={this.state.totalPrice}\r\n// \t\t\t\t\t// \t\t{...props}\r\n// \t\t\t\t\t// \t/>\r\n// \t\t\t\t\t// )} // SUDAH TIDAK DIGUNAKAN KARENA REDUX\r\n// \t\t\t\t// \tcomponent={ContactData}\r\n// \t\t\t\t// /> */}\r\n// \t\t\t// </div>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2MNSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__petcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1z6DF\",\"Label\":\"Input_Label__3HjoJ\",\"InputElement\":\"Input_InputElement__2rTMF\",\"Invalid\":\"Input_Invalid__157lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__s3vsJ\"};"],"sourceRoot":""}