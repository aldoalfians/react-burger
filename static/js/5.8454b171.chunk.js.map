{"version":3,"sources":["component/Order/Order.module.css","component/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredient","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,kHCwCXC,EAtCD,SAACC,GACd,IAAMC,EAAa,GAEnB,IAAK,IAAIC,KAAkBF,EAAMC,WAChCA,EAAWE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,WAAWC,KAI3B,IAAMI,EAAmBL,EAAWM,KAAI,SAACC,GACxC,OACC,0BACCC,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEVC,IAAKP,EAAGJ,MAEPI,EAAGJ,KAVL,KAUaI,EAAGH,OAVhB,QAeF,OACC,yBAAKW,UAAWC,IAAQC,OACvB,2CAAiBZ,GACjB,oCACQ,IACP,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCC3BlDC,E,kLAOJC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAoBtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKxB,MAAM8B,UACfF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAACR,GAAD,OAC9B,kBAACmB,EAAD,CACCH,IAAKhB,EAAMgC,GACX9B,WAAYF,EAAME,WAClBoB,MAAOtB,EAAMsB,YAIT,6BAAMO,O,GArCMI,aAyDNC,uBAhBS,SAACC,GACxB,MAAO,CACNN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIM,SAACS,GAC3B,MAAO,CACNX,cAAe,SAACC,EAAOC,GAAR,OACdS,EAASC,IAAoBX,EAAOC,QAIxBM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.8454b171.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__20c0a\"};","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n\tconst ingredient = [];\r\n\r\n\tfor (let ingredientName in props.ingredient) {\r\n\t\tingredient.push({\r\n\t\t\tname: ingredientName,\r\n\t\t\tamount: props.ingredient[ingredientName],\r\n\t\t});\r\n\t}\r\n\r\n\tconst ingredientOutput = ingredient.map((ig) => {\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttextTransform: \"capitalize\",\r\n\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\tmargin: \"0 8px\",\r\n\t\t\t\t\tborder: \"1px solid #ccc\",\r\n\t\t\t\t\tpadding: \"5px\",\r\n\t\t\t\t}}\r\n\t\t\t\tkey={ig.name}\r\n\t\t\t>\r\n\t\t\t\t{ig.name} ({ig.amount})\r\n\t\t\t</span>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={classes.Order}>\r\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\r\n\t\t\t<p>\r\n\t\t\t\tPrice:{\" \"}\r\n\t\t\t\t<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../component/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../component/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n\t// state = {\r\n\t// \torders: [],\r\n\t// \tloading: true,\r\n\t// };\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onFetchOrders(this.props.token, this.props.userId);\r\n\t\t// sudah tidak digunakan karena redux\r\n\t\t// axios\r\n\t\t// \t.get(\"/orders.json\")\r\n\t\t// \t.then((res) => {\r\n\t\t// \t\tconst fetchedOrders = [];\r\n\t\t// \t\tfor (let key in res.data) {\r\n\t\t// \t\t\tfetchedOrders.push({\r\n\t\t// \t\t\t\t...res.data[key],\r\n\t\t// \t\t\t\tid: key,\r\n\t\t// \t\t\t});\r\n\t\t// \t\t}\r\n\t\t// \t\tthis.setState({ loading: true, orders: fetchedOrders });\r\n\t\t// \t})\r\n\t\t// \t.catch((err) => {\r\n\t\t// \t\tthis.setState({ loading: false });\r\n\t\t// \t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet orders = <Spinner />;\r\n\t\tif (!this.props.loading) {\r\n\t\t\torders = this.props.orders.map((order) => (\r\n\t\t\t\t<Order\r\n\t\t\t\t\tkey={order.id}\r\n\t\t\t\t\tingredient={order.ingredient}\r\n\t\t\t\t\tprice={order.price}\r\n\t\t\t\t/>\r\n\t\t\t));\r\n\t\t}\r\n\t\treturn <div>{orders}</div>;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\torders: state.order.orders,\r\n\t\tloading: state.order.loading,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonFetchOrders: (token, userId) =>\r\n\t\t\tdispatch(actions.fetchOrders(token, userId)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}